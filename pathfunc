import os
import fnmatch

def get_fn_info(fn):
    # 使用os.path模块获取目录、基本名称和扩展名
    dir_name, base_name = os.path.split(fn)
    base_name, ext = os.path.splitext(base_name)

    # 构建fn_info对象
    class FileInfo:
        def __init__(self, dir, base, ext):
            self.dir = dir
            self.base = base
            self.ext = ext

    # 返回fn_info对象
    return FileInfo(dir_name, base_name, ext)

def create_opath(out_dir, basename, steps):
    result_paths = {}

    for step in steps:
        step_dir = os.path.join(out_dir, step)

        # 如果目录不存在，则创建
        if not os.path.exists(step_dir):
            os.makedirs(step_dir)

        # 生成输出文件路径
        basename = get_fn_info(basename).base
        filename = f"{basename}_{step}.hdr"
        output_path = os.path.join(step_dir, filename)

        # 将结果添加到字典
        result_paths[step] = output_path

    return result_paths

def find_xml_files(root_dir):
    # 初始化一个列表来存储找到的文件名
    xml_files = []

    # 递归遍历目录树
    for dirpath, dirnames, filenames in os.walk(root_dir):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            # 检查文件是否以 '.xml' 后缀结尾且文件名中不包含 'Check' 字符串
            if 'Check' not in filename and 'describe' not in filename and filename.lower().endswith('.xml'):
                # 添加符合条件的文件名到结果列表
                xml_files.append(file_path)

    # 返回找到的 XML 文件名列表
    return xml_files

def get_fn_list(root_dir):
    # 使用 fnmatch 模块匹配文件
    files = [os.path.join(root_dir, f) for f in os.listdir(root_dir) if os.path.isfile(os.path.join(root_dir, f))
             # and (fnmatch.fnmatch(f, '*.dat') or fnmatch.fnmatch(f, '*.img'))]
             and (fnmatch.fnmatch(f, '*.hdr'))]

    # xml_files = find_xml_files(root_dir)
    # fn_list = files + xml_files

    fn_list = files

    if fn_list:
        return fn_list
    else:
        # print('No standard ENVIRaster[*.dat/*.img] or [*.xml] file of China Satellites found.')
        print('No standard ENVIRaster header[*.hdr] found.')
        return []

